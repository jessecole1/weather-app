{"ast":null,"code":"var _jsxFileName = \"/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  const {\n    theCity\n  } = props;\n  const {\n    searchCity\n  } = props;\n\n  // const [feelsLikeF, setFeelsLikeF] = useState();\n  // const [feelsLikeC, setFeelsLikeC] = useState();\n\n  // const [gustM, setGustM] = useState();\n  // const [gustK, setGustK] = useState();\n\n  const [date, setDate] = useState();\n  const [localTime, setLocalTime] = useState();\n  const [city, setCity] = useState();\n  const [region, setRegion] = useState();\n  const [measure, setMeasure] = useState(\"fahrenheit\");\n  const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n  const [forecastDate, setForecastDate] = useState();\n  const [hourArray, setHourArray] = useState();\n  const [tempF, setTempF] = useState([]);\n  const [tempC, setTempC] = useState([]);\n  const [windM, setWindM] = useState([]);\n  const [windK, setWindK] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n  const [conditionCode, setConditionCode] = useState([]);\n  const [icon, setIcon] = useState();\n  const [text, setText] = useState();\n  const [timeHour, setTimeHour] = useState();\n  const [kss, setKss] = useState();\n\n  // let d = new Date().getHours();\n  // console.log(d);\n  // let arr = [];\n  // while (d < 24 && arr.length < 10) {\n  //     arr.push(d);\n  //     d++;\n  // }\n\n  // setHourArray(arr);\n\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`).then(response => {\n      setCity(response.data.location.name);\n      setLocalTime(response.data.location.localtime);\n      setRegion(response.data.location.region);\n      console.log(response);\n      let fTemps = [];\n      let cTemps = [];\n      let mWinds = [];\n      let kWinds = [];\n      let humidities = [];\n      let conditionCodes = [];\n      let icons = [];\n      let texts = [];\n      let times = [];\n      let d = new Date().getHours();\n      // console.log(d);\n      let arr = [];\n      while (d < 24 && arr.length < 10) {\n        arr.push(d);\n        fTemps.push(response.data.forecast.forecastday[0].hour[d].temp_f);\n        cTemps.push(response.data.forecast.forecastday[0].hour[d].temp_c);\n        mWinds.push(response.data.forecast.forecastday[0].hour[d].wind_mph);\n        kWinds.push(response.data.forecast.forecastday[0].hour[d].wind_kph);\n        humidities.push(response.data.forecast.forecastday[0].hour[d].humidity);\n        conditionCodes.push(response.data.forecast.forecastday[0].hour[d].condition.code);\n        icons.push(response.data.forecast.forecastday[0].hour[d].condition.icon);\n        texts.push(response.data.forecast.forecastday[0].hour[d].condition.text);\n        times.push(response.data.forecast.forecastday[0].hour[d].time);\n        d++;\n      }\n      let ks = [];\n      for (let i = 0; i < arr.length; i++) {\n        let k = {\n          farenTemps: fTemps[i],\n          celcTemps: cTemps[i],\n          mphWinds: mWinds[i],\n          kphWinds: kWinds[i],\n          humidities: humidities[i],\n          conditionCodes: conditionCodes[i],\n          icons: icons[i],\n          texts: texts[i],\n          times: times[i]\n        };\n        ks.push(k);\n      }\n      setKss(ks);\n      console.log(ks);\n\n      // setHourArray(arr);\n\n      // setTempF(fTemps);\n      // setTempC(cTemps);\n      // setWindM(mWinds);\n      // setWindK(kWinds);\n      // setHumidity(humidities);\n      // setConditionCode(conditionCodes);\n      // setIcon(icons);\n      // setText(texts);\n      // setTimeHour(times);\n\n      // fTemps.push(response.data.forecast.forecastday[0].hour[0].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[1].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[2].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[3].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[4].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[5].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[6].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[7].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[8].temp_f);\n      // fTemps.push(response.data.forecast.forecastday[0].hour[9].temp_f);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [theCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-200 h-100 flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      kss: kss,\n      hourArray: hourArray,\n      city: city,\n      localTime: localTime,\n      region: region\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"SNszZ3xzqhNDZAt2AzNMizfYlSY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Form","Card","jsxDEV","_jsxDEV","Weather","props","_s","theCity","searchCity","date","setDate","localTime","setLocalTime","city","setCity","region","setRegion","measure","setMeasure","speedMeasure","setSpeedMeasure","forecastDate","setForecastDate","hourArray","setHourArray","tempF","setTempF","tempC","setTempC","windM","setWindM","windK","setWindK","humidity","setHumidity","conditionCode","setConditionCode","icon","setIcon","text","setText","timeHour","setTimeHour","kss","setKss","get","then","response","data","location","name","localtime","console","log","fTemps","cTemps","mWinds","kWinds","humidities","conditionCodes","icons","texts","times","d","Date","getHours","arr","length","push","forecast","forecastday","hour","temp_f","temp_c","wind_mph","wind_kph","condition","code","time","ks","i","k","farenTemps","celcTemps","mphWinds","kphWinds","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\n\n\nconst Weather = (props) => {\n\n\n    const {theCity} = props;\n    const {searchCity} = props;\n\n    \n    \n    // const [feelsLikeF, setFeelsLikeF] = useState();\n    // const [feelsLikeC, setFeelsLikeC] = useState();\n    \n    // const [gustM, setGustM] = useState();\n    // const [gustK, setGustK] = useState();\n    \n    const [date, setDate] = useState();\n    const [localTime, setLocalTime] = useState();\n    \n    const [city, setCity] = useState();\n    const [region, setRegion] = useState();\n    const [measure, setMeasure] = useState(\"fahrenheit\");\n    const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n    const [forecastDate, setForecastDate] = useState();\n\n    const [hourArray, setHourArray] = useState();\n    const [tempF, setTempF] = useState([]);\n    const [tempC, setTempC] = useState([]);\n    const [windM, setWindM] = useState([]);\n    const [windK, setWindK] = useState([]);\n    const [humidity, setHumidity] = useState([]);\n    const [conditionCode, setConditionCode] = useState([]);\n    const [icon, setIcon] = useState();\n    const [text, setText] = useState();\n    const [timeHour, setTimeHour] = useState();\n\n    const [kss, setKss] = useState();\n\n    \n    // let d = new Date().getHours();\n    // console.log(d);\n    // let arr = [];\n    // while (d < 24 && arr.length < 10) {\n    //     arr.push(d);\n    //     d++;\n    // }\n\n\n    // setHourArray(arr);\n\n    useEffect(() => {\n            axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n                .then((response) => {\n                    setCity(response.data.location.name);\n                    setLocalTime(response.data.location.localtime);\n                    setRegion(response.data.location.region);\n                    console.log(response);\n                    let fTemps = [];\n                    let cTemps = [];\n                    let mWinds = [];\n                    let kWinds = [];\n                    let humidities = [];\n                    let conditionCodes = [];\n                    let icons = [];\n                    let texts = [];\n                    let times = [];\n\n                    let d = new Date().getHours();\n                    // console.log(d);\n                    let arr = [];\n                    while (d < 24 && arr.length < 10) {\n                        arr.push(d);\n                        fTemps.push(response.data.forecast.forecastday[0].hour[d].temp_f);\n                        cTemps.push(response.data.forecast.forecastday[0].hour[d].temp_c);\n                        mWinds.push(response.data.forecast.forecastday[0].hour[d].wind_mph);\n                        kWinds.push(response.data.forecast.forecastday[0].hour[d].wind_kph);\n                        humidities.push(response.data.forecast.forecastday[0].hour[d].humidity);\n                        conditionCodes.push(response.data.forecast.forecastday[0].hour[d].condition.code);\n                        icons.push(response.data.forecast.forecastday[0].hour[d].condition.icon);\n                        texts.push(response.data.forecast.forecastday[0].hour[d].condition.text);\n                        times.push(response.data.forecast.forecastday[0].hour[d].time);\n                        \n                        d++;\n                    }\n                    let ks = [];\n\n                    for (let i = 0; i < arr.length; i++) {\n                        let k = {farenTemps: fTemps[i], celcTemps: cTemps[i], mphWinds: mWinds[i], kphWinds: kWinds[i], humidities: humidities[i],\n                            conditionCodes: conditionCodes[i], icons: icons[i], texts: texts[i], times: times[i]};\n                        ks.push(k);\n                    }\n                    setKss(ks);\n                    console.log(ks);\n                    \n                    // setHourArray(arr);\n                    \n                    // setTempF(fTemps);\n                    // setTempC(cTemps);\n                    // setWindM(mWinds);\n                    // setWindK(kWinds);\n                    // setHumidity(humidities);\n                    // setConditionCode(conditionCodes);\n                    // setIcon(icons);\n                    // setText(texts);\n                    // setTimeHour(times);\n                    \n\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[0].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[1].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[2].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[3].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[4].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[5].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[6].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[7].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[8].temp_f);\n                    // fTemps.push(response.data.forecast.forecastday[0].hour[9].temp_f);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n            }, [theCity]);\n\n\n\n    return (\n        <div className=\"bg-blue-200 h-100 flex justify-center\">\n            <Card kss={kss} hourArray={hourArray} city={city} localTime={localTime} region={region}/>\n        </div>\n    );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,WAAW,QAAO,kBAAkB;AACvD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAGvB,MAAM;IAACC;EAAO,CAAC,GAAGF,KAAK;EACvB,MAAM;IAACG;EAAU,CAAC,GAAGH,KAAK;;EAI1B;EACA;;EAEA;EACA;;EAEA,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EAE5C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,YAAY,CAAC;EACpD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,CAAC;EAElD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC0C,IAAI,EAAEC,OAAO,CAAC,GAAG3C,QAAQ,CAAC,CAAC;EAClC,MAAM,CAAC4C,IAAI,EAAEC,OAAO,CAAC,GAAG7C,QAAQ,CAAC,CAAC;EAClC,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAC,CAAC;EAE1C,MAAM,CAACgD,GAAG,EAAEC,MAAM,CAAC,GAAGjD,QAAQ,CAAC,CAAC;;EAGhC;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEAC,SAAS,CAAC,MAAM;IACRC,KAAK,CAACgD,GAAG,CAAE,oFAAmFtC,OAAQ,EAAC,CAAC,CACnGuC,IAAI,CAAEC,QAAQ,IAAK;MAChBjC,OAAO,CAACiC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;MACpCtC,YAAY,CAACmC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACE,SAAS,CAAC;MAC9CnC,SAAS,CAAC+B,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAClC,MAAM,CAAC;MACxCqC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrB,IAAIO,MAAM,GAAG,EAAE;MACf,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIC,UAAU,GAAG,EAAE;MACnB,IAAIC,cAAc,GAAG,EAAE;MACvB,IAAIC,KAAK,GAAG,EAAE;MACd,IAAIC,KAAK,GAAG,EAAE;MACd,IAAIC,KAAK,GAAG,EAAE;MAEd,IAAIC,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC7B;MACA,IAAIC,GAAG,GAAG,EAAE;MACZ,OAAOH,CAAC,GAAG,EAAE,IAAIG,GAAG,CAACC,MAAM,GAAG,EAAE,EAAE;QAC9BD,GAAG,CAACE,IAAI,CAACL,CAAC,CAAC;QACXT,MAAM,CAACc,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACS,MAAM,CAAC;QACjEjB,MAAM,CAACa,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACU,MAAM,CAAC;QACjEjB,MAAM,CAACY,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACW,QAAQ,CAAC;QACnEjB,MAAM,CAACW,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACY,QAAQ,CAAC;QACnEjB,UAAU,CAACU,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAAC9B,QAAQ,CAAC;QACvE0B,cAAc,CAACS,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACa,SAAS,CAACC,IAAI,CAAC;QACjFjB,KAAK,CAACQ,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACa,SAAS,CAACvC,IAAI,CAAC;QACxEwB,KAAK,CAACO,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACa,SAAS,CAACrC,IAAI,CAAC;QACxEuB,KAAK,CAACM,IAAI,CAACrB,QAAQ,CAACC,IAAI,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI,CAACR,CAAC,CAAC,CAACe,IAAI,CAAC;QAE9Df,CAAC,EAAE;MACP;MACA,IAAIgB,EAAE,GAAG,EAAE;MAEX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,GAAG,CAACC,MAAM,EAAEa,CAAC,EAAE,EAAE;QACjC,IAAIC,CAAC,GAAG;UAACC,UAAU,EAAE5B,MAAM,CAAC0B,CAAC,CAAC;UAAEG,SAAS,EAAE5B,MAAM,CAACyB,CAAC,CAAC;UAAEI,QAAQ,EAAE5B,MAAM,CAACwB,CAAC,CAAC;UAAEK,QAAQ,EAAE5B,MAAM,CAACuB,CAAC,CAAC;UAAEtB,UAAU,EAAEA,UAAU,CAACsB,CAAC,CAAC;UACrHrB,cAAc,EAAEA,cAAc,CAACqB,CAAC,CAAC;UAAEpB,KAAK,EAAEA,KAAK,CAACoB,CAAC,CAAC;UAAEnB,KAAK,EAAEA,KAAK,CAACmB,CAAC,CAAC;UAAElB,KAAK,EAAEA,KAAK,CAACkB,CAAC;QAAC,CAAC;QACzFD,EAAE,CAACX,IAAI,CAACa,CAAC,CAAC;MACd;MACArC,MAAM,CAACmC,EAAE,CAAC;MACV3B,OAAO,CAACC,GAAG,CAAC0B,EAAE,CAAC;;MAEf;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAGA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAK;MACZnC,OAAO,CAACC,GAAG,CAACkC,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAAChF,OAAO,CAAC,CAAC;EAIrB,oBACIJ,OAAA;IAAKqF,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eAClDtF,OAAA,CAACF,IAAI;MAAC0C,GAAG,EAAEA,GAAI;MAACpB,SAAS,EAAEA,SAAU;MAACV,IAAI,EAAEA,IAAK;MAACF,SAAS,EAAEA,SAAU;MAACI,MAAM,EAAEA;IAAO;MAAA2E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEd,CAAC;AAACvF,EAAA,CAhIIF,OAAO;AAAA0F,EAAA,GAAP1F,OAAO;AAkIb,eAAeA,OAAO;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  const {\n    theCity\n  } = props;\n  const {\n    searchCity\n  } = props;\n  const [measure, setMeasure] = useState(\"fahrenheit\");\n  const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n  const [localTime, setLocalTime] = useState();\n  const [city, setCity] = useState();\n  const [region, setRegion] = useState();\n  const [tempF, setTempF] = useState();\n  const [feelsLikeF, setFeelsLikeF] = useState();\n  const [tempC, setTempC] = useState();\n  const [feelsLikeC, setFeelsLikeC] = useState();\n  const [gustM, setGustM] = useState();\n  const [gustK, setGustK] = useState();\n  const [windM, setWindM] = useState();\n  const [windK, setWindK] = useState();\n  const [date, setDate] = useState();\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/current.json?key=772fe409b0a648b694d213844232006&q=${theCity}`).then(response => {\n      setTempF(response.data.current.temp_f);\n      setFeelsLikeF(response.data.current.feelslike_f);\n      setTempC(response.data.current.temp_c);\n      setFeelsLikeC(response.data.current.feelslike_c);\n      setLocalTime(response.data.location.localtime);\n      setCity(response.data.location.name + \",\");\n      setRegion(response.data.location.region);\n      setGustM(response.data.current.gust_mph);\n      setGustK(response.data.current.gust_kph);\n      setWindM(response.data.current.wind_mph);\n      setWindK(response.data.current.wind_kph);\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [theCity]);\n  axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`).then(response => {\n    console.log(\"forecast data: \" + JSON.stringify(response.data.forecast.forecastday));\n  }).catch(err => {\n    console.log(err);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-200 h-96 flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      measure: measure,\n      speedMeasure: speedMeasure,\n      localTime: localTime,\n      city: city,\n      region: region,\n      tempF: tempF,\n      feelsLikeF: feelsLikeF,\n      tempC: tempC,\n      feelsLikeC: feelsLikeC,\n      gustM: gustM,\n      gustK: gustK,\n      windM: windM,\n      windK: windK,\n      date: date,\n      setMeasure: setMeasure,\n      setSpeedMeasure: setSpeedMeasure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"oZjX2OY+p6TFboMv8w+5Y7KIpWE=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Form","Card","jsxDEV","_jsxDEV","Weather","props","_s","theCity","searchCity","measure","setMeasure","speedMeasure","setSpeedMeasure","localTime","setLocalTime","city","setCity","region","setRegion","tempF","setTempF","feelsLikeF","setFeelsLikeF","tempC","setTempC","feelsLikeC","setFeelsLikeC","gustM","setGustM","gustK","setGustK","windM","setWindM","windK","setWindK","date","setDate","get","then","response","data","current","temp_f","feelslike_f","temp_c","feelslike_c","location","localtime","name","gust_mph","gust_kph","wind_mph","wind_kph","console","log","catch","err","JSON","stringify","forecast","forecastday","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\n\n\nconst Weather = (props) => {\n\n\n    const {theCity} = props;\n    const {searchCity} = props;\n\n    const [measure, setMeasure] = useState(\"fahrenheit\");\n    const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n\n    const [localTime, setLocalTime] = useState();\n    const [city, setCity] = useState();\n    const [region, setRegion] = useState();\n\n    const [tempF, setTempF] = useState();\n    const [feelsLikeF, setFeelsLikeF] = useState();\n    const [tempC, setTempC] = useState();\n    const [feelsLikeC, setFeelsLikeC] = useState();\n\n    const [gustM, setGustM] = useState();\n    const [gustK, setGustK] = useState();\n    const [windM, setWindM] = useState();\n    const [windK, setWindK] = useState();\n\n    const [date, setDate] = useState();\n\n    \n    useEffect(() => {\n            axios.get(`http://api.weatherapi.com/v1/current.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n                .then((response) => {\n                    setTempF(response.data.current.temp_f);\n                    setFeelsLikeF(response.data.current.feelslike_f);\n                    setTempC(response.data.current.temp_c);\n                    setFeelsLikeC(response.data.current.feelslike_c);\n                    setLocalTime(response.data.location.localtime);\n                    setCity(response.data.location.name + \",\");\n                    setRegion(response.data.location.region);\n                    setGustM(response.data.current.gust_mph);\n                    setGustK(response.data.current.gust_kph);\n                    setWindM(response.data.current.wind_mph);\n                    setWindK(response.data.current.wind_kph);\n                    console.log(response.data)\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n    \n    }, [theCity]);\n            axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n                .then((response) => {\n                    console.log(\"forecast data: \" + JSON.stringify(response.data.forecast.forecastday));\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n\n\n\n    return (\n        <div className=\"bg-blue-200 h-96 flex justify-center\">\n            <Card measure={measure} speedMeasure={speedMeasure} localTime={localTime} city={city} \n            region={region} tempF={tempF} feelsLikeF={feelsLikeF} tempC={tempC} feelsLikeC={feelsLikeC}\n            gustM={gustM} gustK={gustK} windM={windM} windK={windK} date={date} setMeasure={setMeasure} setSpeedMeasure={setSpeedMeasure}/>\n            {/* <h2>Hello there</h2>\n            <p>Check out the weather for: {city}, {region}</p>\n            <form>\n                <select onChange={(e) => { setMeasure(e.target.value)}}>\n                    <option value=\"fahrenheit\">Fahrenheit</option>\n                    <option value=\"celcius\">Celcius</option>\n                </select>\n            </form>\n            <br></br>\n            <div>\n                <p>LocalTime: {localTime}</p>\n                {\n                    measure === \"fahrenheit\"? (\n                        <div>\n                            <p>Temperature: {tempF}째</p>\n                            <p>Feels Like: {feelsLikeF}째</p>\n                        </div>\n                    ) : (\n                        <div>\n                            <p>Temperature: {tempC}째</p>\n                            <p>Feels Like: {feelsLikeC}째</p>\n                        </div>\n                )}\n                <div>\n                    <form>\n                        <select onChange={(e) => {setSpeedMeasure(e.target.value)}}>\n                            <option value=\"mph\">MPH</option>\n                            <option value=\"kph\">KPH</option>\n                        </select>\n                    </form>\n                    <div>\n                        {\n                            speedMeasure === \"mph\" ? (\n                                <div>\n                                    <p>Wind: {windM}-mph | Gust: {gustM}-mph</p>\n                                </div>\n                            ) : (\n                                <div>\n                                    <p>Wind: {windK}-kph | Gust: {gustK}-kph</p>\n                                </div>\n                        )}\n                    </div>\n                    \n                </div>\n                <div>\n                    Date: {date}\n                </div>\n            </div> */}\n        </div>\n    );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
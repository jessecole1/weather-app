{"ast":null,"code":"var _jsxFileName = \"/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  const {\n    theCity\n  } = props;\n  const {\n    searchCity\n  } = props;\n\n  // const [feelsLikeF, setFeelsLikeF] = useState();\n  // const [feelsLikeC, setFeelsLikeC] = useState();\n\n  // const [gustM, setGustM] = useState();\n  // const [gustK, setGustK] = useState();\n\n  const [date, setDate] = useState();\n  const [localTime, setLocalTime] = useState();\n  const [city, setCity] = useState();\n  const [region, setRegion] = useState();\n  const [measure, setMeasure] = useState(\"fahrenheit\");\n  const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n  const [forecastDate, setForecastDate] = useState();\n  const [hourArray, setHourArray] = useState([]);\n  const [tempF, setTempF] = useState([]);\n  const [tempC, setTempC] = useState([]);\n  const [windM, setWindM] = useState([]);\n  const [windK, setWindK] = useState([]);\n  const [humitidy, setHumitidy] = useState([]);\n  const [condition, setCondition] = useState([]);\n  const [conditionCode, setConditionCode] = useState([]);\n  const [icon, setIcon] = useState();\n  const [text, setText] = useState();\n\n  // let d = new Date().getHours();\n  // let arr = [];\n  // for (let i = 0; i < 24; i++) {\n  //     let hr = d += i;\n  //     arr.push(hr);\n  // }\n  // setHourArray(arr);\n  // console.log(hourArray);\n\n  useEffect(() => {\n    axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [theCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-200 h-96 flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      measure: measure,\n      speedMeasure: speedMeasure,\n      localTime: localTime,\n      city: city,\n      region: region,\n      tempF: tempF,\n      tempC: tempC,\n      windM: windM,\n      windK: windK,\n      date: date,\n      setMeasure: setMeasure,\n      setSpeedMeasure: setSpeedMeasure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"qcaEQ+dbDN0kQzKXwmNgImN2kKY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Form","Card","jsxDEV","_jsxDEV","Weather","props","_s","theCity","searchCity","date","setDate","localTime","setLocalTime","city","setCity","region","setRegion","measure","setMeasure","speedMeasure","setSpeedMeasure","forecastDate","setForecastDate","hourArray","setHourArray","tempF","setTempF","tempC","setTempC","windM","setWindM","windK","setWindK","humitidy","setHumitidy","condition","setCondition","conditionCode","setConditionCode","icon","setIcon","text","setText","get","then","response","console","log","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\n\n\nconst Weather = (props) => {\n\n\n    const {theCity} = props;\n    const {searchCity} = props;\n\n    \n    \n    // const [feelsLikeF, setFeelsLikeF] = useState();\n    // const [feelsLikeC, setFeelsLikeC] = useState();\n    \n    // const [gustM, setGustM] = useState();\n    // const [gustK, setGustK] = useState();\n    \n    const [date, setDate] = useState();\n    const [localTime, setLocalTime] = useState();\n    \n    const [city, setCity] = useState();\n    const [region, setRegion] = useState();\n    const [measure, setMeasure] = useState(\"fahrenheit\");\n    const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n    const [forecastDate, setForecastDate] = useState();\n\n    const [hourArray, setHourArray] = useState([]);\n    const [tempF, setTempF] = useState([]);\n    const [tempC, setTempC] = useState([]);\n    const [windM, setWindM] = useState([]);\n    const [windK, setWindK] = useState([]);\n    const [humitidy, setHumitidy] = useState([]);\n    const [condition, setCondition] = useState([]);\n    const [conditionCode, setConditionCode] = useState([]);\n    const [icon, setIcon] = useState();\n    const [text, setText] = useState();\n\n    \n    // let d = new Date().getHours();\n    // let arr = [];\n    // for (let i = 0; i < 24; i++) {\n    //     let hr = d += i;\n    //     arr.push(hr);\n    // }\n    // setHourArray(arr);\n    // console.log(hourArray);\n\n    useEffect(() => {\n            axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n            }, [theCity]);\n\n\n\n\n\n    return (\n        <div className=\"bg-blue-200 h-96 flex justify-center\">\n            <Card measure={measure} speedMeasure={speedMeasure} localTime={localTime} city={city} \n            region={region} tempF={tempF} tempC={tempC}\n            windM={windM} windK={windK} date={date} setMeasure={setMeasure} setSpeedMeasure={setSpeedMeasure}/>\n        </div>\n    );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
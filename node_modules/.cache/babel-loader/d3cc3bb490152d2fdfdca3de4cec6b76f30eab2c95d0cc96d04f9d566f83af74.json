{"ast":null,"code":"var _jsxFileName = \"/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  const {\n    theCity\n  } = props;\n  const {\n    searchCity\n  } = props;\n  const [measure, setMeasure] = useState(\"fahrenheit\");\n  const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n  const [localTime, setLocalTime] = useState();\n  const [city, setCity] = useState();\n  const [region, setRegion] = useState();\n  const [tempF, setTempF] = useState([]);\n  const [feelsLikeF, setFeelsLikeF] = useState();\n  const [tempC, setTempC] = useState();\n  const [feelsLikeC, setFeelsLikeC] = useState();\n  const [gustM, setGustM] = useState();\n  const [gustK, setGustK] = useState();\n  const [windM, setWindM] = useState();\n  const [windK, setWindK] = useState();\n  const [date, setDate] = useState();\n  const [forecastData, setForecastData] = useState();\n  const [hourArray, setHourArray] = useState([]);\n\n  // console.log(\"dateArray: \" + dateArray);\n\n  useEffect(() => {\n    // axios.get(`http://api.weatherapi.com/v1/current.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n    //     .then((response) => {\n    //         setTempF(response.data.current.temp_f);\n    //         setFeelsLikeF(response.data.current.feelslike_f);\n    //         setTempC(response.data.current.temp_c);\n    //         setFeelsLikeC(response.data.current.feelslike_c);\n    //         setLocalTime(response.data.location.localtime);\n    //         setCity(response.data.location.name + \",\");\n    //         setRegion(response.data.location.region);\n    //         setGustM(response.data.current.gust_mph);\n    //         setGustK(response.data.current.gust_kph);\n    //         setWindM(response.data.current.wind_mph);\n    //         setWindK(response.data.current.wind_kph);\n    //         // console.log(\"current data: \" + JSON.stringify(response.data.current.is_day))\n    //     })\n    //     .catch((err) => {\n    //         console.log(err);\n    //     });\n\n    // }, [theCity]);\n\n    axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`).then(response => {\n      setForecastData(response.data.forecast.forecastday[0]);\n      // console.log(forecastData);\n    }).catch(err => {\n      console.log(err);\n    });\n    // })   \n  }, [theCity]);\n  console.log(\"from weather: \" + JSON.stringify(forecastData));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-200 h-96 flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      forecastData: forecastData,\n      measure: measure,\n      speedMeasure: speedMeasure,\n      localTime: localTime,\n      city: city,\n      region: region,\n      tempF: tempF,\n      feelsLikeF: feelsLikeF,\n      tempC: tempC,\n      feelsLikeC: feelsLikeC,\n      gustM: gustM,\n      gustK: gustK,\n      windM: windM,\n      windK: windK,\n      date: date,\n      setMeasure: setMeasure,\n      setSpeedMeasure: setSpeedMeasure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"PLNjgpGMpfyGydKuvxyghpup1ac=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Form","Card","jsxDEV","_jsxDEV","Weather","props","_s","theCity","searchCity","measure","setMeasure","speedMeasure","setSpeedMeasure","localTime","setLocalTime","city","setCity","region","setRegion","tempF","setTempF","feelsLikeF","setFeelsLikeF","tempC","setTempC","feelsLikeC","setFeelsLikeC","gustM","setGustM","gustK","setGustK","windM","setWindM","windK","setWindK","date","setDate","forecastData","setForecastData","hourArray","setHourArray","get","then","response","data","forecast","forecastday","catch","err","console","log","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessecole/Desktop/My_Repository/weather-app/src/components/Weather.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Form from './Form';\nimport Card from './Card';\n\n\nconst Weather = (props) => {\n\n\n    const {theCity} = props;\n    const {searchCity} = props;\n\n    const [measure, setMeasure] = useState(\"fahrenheit\");\n    const [speedMeasure, setSpeedMeasure] = useState(\"mph\");\n\n    const [localTime, setLocalTime] = useState();\n    const [city, setCity] = useState();\n    const [region, setRegion] = useState();\n\n    const [tempF, setTempF] = useState([]);\n    const [feelsLikeF, setFeelsLikeF] = useState();\n    const [tempC, setTempC] = useState();\n    const [feelsLikeC, setFeelsLikeC] = useState();\n\n    const [gustM, setGustM] = useState();\n    const [gustK, setGustK] = useState();\n    const [windM, setWindM] = useState();\n    const [windK, setWindK] = useState();\n\n    const [date, setDate] = useState();\n\n    const [forecastData, setForecastData] = useState();\n\n    const [hourArray, setHourArray] = useState([]);\n\n \n    // console.log(\"dateArray: \" + dateArray);\n\n    \n    useEffect(() => {\n            // axios.get(`http://api.weatherapi.com/v1/current.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n            //     .then((response) => {\n            //         setTempF(response.data.current.temp_f);\n            //         setFeelsLikeF(response.data.current.feelslike_f);\n            //         setTempC(response.data.current.temp_c);\n            //         setFeelsLikeC(response.data.current.feelslike_c);\n            //         setLocalTime(response.data.location.localtime);\n            //         setCity(response.data.location.name + \",\");\n            //         setRegion(response.data.location.region);\n            //         setGustM(response.data.current.gust_mph);\n            //         setGustK(response.data.current.gust_kph);\n            //         setWindM(response.data.current.wind_mph);\n            //         setWindK(response.data.current.wind_kph);\n            //         // console.log(\"current data: \" + JSON.stringify(response.data.current.is_day))\n            //     })\n            //     .catch((err) => {\n            //         console.log(err);\n            //     });\n    \n    // }, [theCity]);\n\n            axios.get(`http://api.weatherapi.com/v1/forecast.json?key=772fe409b0a648b694d213844232006&q=${theCity}`)\n                .then((response) => {\n                        setForecastData(response.data.forecast.forecastday[0])\n                        // console.log(forecastData);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n            // })   \n            }, [theCity]);\n\n            console.log(\"from weather: \" + JSON.stringify(forecastData));\n\n\n\n\n    return (\n        <div className=\"bg-blue-200 h-96 flex justify-center\">\n            <Card forecastData={forecastData} measure={measure} speedMeasure={speedMeasure} localTime={localTime} city={city} \n            region={region} tempF={tempF} feelsLikeF={feelsLikeF} tempC={tempC} feelsLikeC={feelsLikeC}\n            gustM={gustM} gustK={gustK} windM={windM} windK={windK} date={date} setMeasure={setMeasure} setSpeedMeasure={setSpeedMeasure}/>\n        </div>\n    );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}